plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

loom {

    runs {
        datagenClient {
            client()
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${project(":testmod-common").file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.strict-validation"

            ideConfigGenerated = true
            runDir "build/datagen"
            source sourceSets.main
        }
    }

    accessWidenerPath = project(":testmod-common").loom.accessWidenerPath

    mixin { useLegacyMixinAp = true }
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    implementation "blue.endless:jankson:1.2.1"

    implementation project(path: ":fabric", configuration: "namedElements")
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    common(project(path: ":testmod-common", configuration: "namedElements")) { transitive false }
}
